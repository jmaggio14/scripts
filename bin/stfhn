#!/usr/bin/env bash
#
# stfhn by Hayden Schiff (oxguy3)
#
# WIP -- NOT YET FULLY FUNCTIONAL
# Sets the hostname permanently, regardless of which distro you're using
# or what meddling software might be installed.
#
# Usage: stfhn <unqualified name> [fully-qualified name]
#
# Example:  stfhn mymachine mymachine.example.com
#
# If you omit the the fully-qualified name, it'll just set it to:
#     <unqualified name>.local


# comment to place into configs when we edit them
cfgcomment="Generated by stfhn on $(date)"


# dead simple logging
# TODO add colors
# TODO add --quiet and --verbose flags
verbose() { echo $@; }
warning() { echo $@; }
danger() { >&2 echo $@; }

PLACEHOLDER() {
    >&2 echo "oops you reached an unimplemented section of the script, exiting now!"
    exit 1
}

# TODO don't make backups if --no-backups flag is set
makebackup() {
    cp $@{,.bak}
}


# prompt for sudo password immediately
sudo -v

unqualified=$1
fqdn=$2

# if no FQDN was provided, fall back to ".local" name
if [ -z "$fqdn" ]; then
    fqdn="${unqualified}.local"
fi


# set the name with scutil (for BSD-based systems like OS X)
if command -v "scutil" >/dev/null; then
    verbose "Setting hostname with scutil..."
    sudo scutil --set HostName $fqdn
fi


# for SUSE/Slackware
if [ -f "/etc/HOSTNAME" ]; then
    verbose "Replacing /etc/HOSTNAME..."
    echo "$unqualified" | sudo tee /etc/HOSTNAME
fi

# for most Linux distros
if [ -f "/etc/hostname" ]; then
    verbose "Replacing /etc/hostname..."
    echo "$unqualified" | sudo tee /etc/hostname
fi


# TODO edit /etc/hosts
if [ -f "/etc/hosts" ]; then
    verbose "Editing /etc/hosts..."
    PLACEHOLDER
    # TODO edit /etc/hosts in place
else
    warning "The /etc/hosts file did not exist, which is very strange. Creating from scratch..."
    echo "# $cfgcomment\n127.0.0.1 $fqdn $unqualified localhost" | sudo tee /etc/hosts
fi


# edit cloud-init files (used by AWS)
if command -v "cloud-init" >/dev/null; then
    verbose "Detected cloud-init, now enabling preserve_hostname option..."
    if [ -f "/etc/cloud/cloud.cfg" ]; then
        verbose "Editing existing /etc/cloud/cloud.cfg file..."
        PLACEHOLDER
        # TODO how the hell we gonna parse a fucking YAML file in a bash script?
    else
        verbose "Generating /etc/cloud/cloud.cfg from scratch..."
        echo -e "# $cfgcomment\npreserve_hostname: true" | sudo tee /etc/cloud/cloud.cfg
    fi
fi


#TODO merge unnecessarily nested if statements
# handling for RHEL/CentOS/Fedora
if command -v "rpm" >/dev/null; then

    # TODO is there a better way to check if this OS uses /etc/sysconfig/network?
    if [ "$(rpm -E %centos)" != "%centos" ] ||
        [ "$(rpm -E %fedora)" != "%fedora" ] ||
        [ "$(rpm -E %redhat)" != "%redhat" ] # TODO does %redhat actually work?
    then;
        verbose "Editing /etc/sysconfig/network..."
        if [ -f "/etc/sysconfig/network" ]; then
            PLACEHOLDER
            #sed /etc/sysconfig/network
        else
            echo -e "# $cfgcomment\nHOSTNAME=$unqualified" | sudo tee /etc/sysconfig/network
        fi
    fi
fi

# use hostnamectl utility (included with EL7+)
if command -v "hostnamectl" >/dev/null; then
    verbose "Setting hostname with hostnamectl..."
    sudo hostnamectl set-hostname "$fqdn"
fi
